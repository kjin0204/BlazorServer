@page "/ranking"
@using RankingApp.Data.Models;
@using RankingApp.Data.Services;

@inject RankingService RankingService

<h3>Ranking</h3>

<AuthorizeView>
    <Authorized>
        @if (_gameResults == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>UserName</th>
                        <th>Score</th>
                        <th>Date</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var gameResults in _gameResults)
                    {
                        <tr>
                            <td>@gameResults.userName</td>
                            <td>@gameResults.Score</td>
                            <td>@gameResults.Date.ToString()</td>
                        </tr>
                    }
                </tbody>
            </table>
        }

        <p>
            <button class="btn btn-primary" @onclick="AddGameResult">Add</button>
        </p>

        @if(_showPopup)
                {
                    <div class="modal" style="display:block" role="dialog">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h3 class="modal-title">Add/Update GameResult</h3>
                                    <button type="button" class="close" @onclick="ClosePopup">
                                        <span area-hidden="true">X</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <label for="UserName">UserName</label>
                                    <input class="form-control" type="text" placeholder="UserName" @bind-value="_gameResult.userName" />
                                    <label for="Score">Score</label>
                                    <input class="form-control" type="text" placeholder="Score" @bind-value="_gameResult.Score" />
                                    <button class="btn btn-primary" type="button" @onclick="SaveGameResult">
                                        Save
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }

    </Authorized>
    <NotAuthorized>
        <p> No Authorized</p>
    </NotAuthorized>
</AuthorizeView>


@code {
    List<GameResult> _gameResults;
    bool _showPopup; //팡버 할지 말지 판단하는 변수
    GameResult _gameResult;

    protected override async Task OnInitializedAsync()
    {
        _gameResults = await RankingService.GetGameResultsAsync();
    }

    void AddGameResult()
    {
        _showPopup = true;
        _gameResult = new GameResult() { Id = 0  };
    }

    void ClosePopup()
    {
        _showPopup = false;
    }

    async Task SaveGameResult()
    {
        if(_gameResult.Id == 0) //새로 생성
        {
            _gameResult.Date = DateTime.Now;
            var task = RankingService.AddGameResult(_gameResult);

        }
        else //수정 작업
        {

        }

        _gameResults = await RankingService.GetGameResultsAsync(); //데이터 갱신
        //_showPopup = false;
    }
}
